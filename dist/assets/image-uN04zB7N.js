import{p as F,r as i,x as R,l as g,j as l,y as j,z as k,E as L}from"./index-3LQ3mW9z.js";function O(p){const{key:c,recipe:m}=p,e=F();return i.useMemo(()=>{const u=m||(c!=null?e.getSlotRecipe(c):{});return e.sva(structuredClone(u))},[c,m,e])}const V=p=>p.charAt(0).toUpperCase()+p.slice(1),A=p=>{const{key:c,recipe:m}=p,e=V(c||m.className||"Component"),[u,P]=R({name:`${e}StylesContext`,errorMessage:`use${e}Styles returned is 'undefined'. Seems you forgot to wrap the components in "<${e}.Root />" `}),[S,w]=R({name:`${e}ClassNameContext`,errorMessage:`use${e}ClassNames returned is 'undefined'. Seems you forgot to wrap the components in "<${e}.Root />" `,strict:!1}),[E,h]=R({strict:!1,name:`${e}PropsContext`,providerName:`${e}PropsContext`,defaultValue:{}});function v(s){const{unstyled:o,...r}=s,t=O({key:c,recipe:r.recipe||m}),[a,n]=i.useMemo(()=>t.splitVariantProps(r),[r,t]);return{styles:i.useMemo(()=>o?L:t(a),[o,a,t]),classNames:t.classNameMap,props:n}}function I(s,o={}){const{defaultProps:r}=o,t=a=>{const n=h(),d=i.useMemo(()=>k(r,n,a),[n,a]),{styles:y,classNames:N,props:x}=v(d);return l.jsx(u,{value:y,children:l.jsx(S,{value:N,children:l.jsx(s,{...x})})})};return t.displayName=s.displayName||s.name,t}return{StylesProvider:u,ClassNamesProvider:S,PropsProvider:E,usePropsContext:h,useRecipeResult:v,withProvider:(s,o,r)=>{const{defaultProps:t,...a}=r??{},n=g(s,{},a),d=i.forwardRef((y,N)=>{const x=h(),f=i.useMemo(()=>k(t??{},x,y),[x,y]),{styles:C,props:T,classNames:M}=v(f),b=M[o],$=l.jsx(u,{value:C,children:l.jsx(S,{value:M,children:l.jsx(n,{ref:N,...T,css:[C[o],f.css],className:j(f.className,b)})})});return r?.wrapElement?.($,f)??$});return d.displayName=s.displayName||s.name,d},withContext:(s,o,r)=>{const t=g(s,{},r),a=i.forwardRef((n,d)=>{const{unstyled:y,...N}=n,x=P(),C=w()?.[o];return l.jsx(t,{...N,css:[!y&&o?x[o]:void 0,n.css],ref:d,className:j(n.className,C)})});return a.displayName=s.displayName||s.name,a},withRootProvider:I,useStyles:P,useClassNames:w}},K=i.forwardRef(function(c,m){const{align:e,fit:u="cover",...P}=c;return l.jsx(g.img,{ref:m,objectFit:u,objectPosition:e,className:j("chakra-image",c.className),...P})});export{K as I,A as c};
