---
import MainGridLayout from "../../layouts/MainGridLayout.astro";
import { getPost } from "../../lib/client";
import { HASHNODE_BLOG_URL } from "../../lib/hashnode-config";
import type { Post } from "../../lib/schema";

export async function getStaticPaths() {
	// This will be populated at build time with Hashnode post slugs
	// For now, return empty array - posts will be fetched dynamically
	return [];
}

const { slug } = Astro.params;
let post: Post | null = null;

if (slug) {
	try {
		post = await getPost(slug);
	} catch (error) {
		console.error("Failed to fetch Hashnode post:", error);
	}
}

if (!post) {
	return Astro.redirect("/404");
}
---

<MainGridLayout>
  <article class="prose prose-lg max-w-none">
    {post.coverImage && (
      <img 
        src={post.coverImage.url} 
        alt={post.title}
        class="w-full h-64 object-cover rounded-lg mb-6"
      />
    )}
    
    <header class="mb-8">
      <h1 class="text-4xl font-bold mb-4">{post.title}</h1>
      {post.subtitle && (
        <p class="text-xl text-gray-600 dark:text-gray-300 mb-4">{post.subtitle}</p>
      )}
      
      <div class="flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400 mb-4">
        <div class="flex items-center gap-2">
          {post.author.profilePicture && (
            <img 
              src={post.author.profilePicture} 
              alt={post.author.name}
              class="w-8 h-8 rounded-full"
            />
          )}
          <span>By {post.author.name}</span>
        </div>
        <span>•</span>
        <time datetime={post.publishedAt}>
          {new Date(post.publishedAt).toLocaleDateString()}
        </time>
        <span>•</span>
        <span>{post.readTimeInMinutes} min read</span>
      </div>
      
      {post.tags && post.tags.length > 0 && (
        <div class="flex flex-wrap gap-2">
          {post.tags.map((tag) => (
            <span class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm">
              {tag.name}
            </span>
          ))}
        </div>
      )}
    </header>
    
    <div class="prose-content" set:html={post.content.html}></div>
    
    <footer class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-700">
      <div class="flex items-center justify-between">
        <div class="flex items-center gap-3">
          {post.author.profilePicture && (
            <img 
              src={post.author.profilePicture} 
              alt={post.author.name}
              class="w-12 h-12 rounded-full"
            />
          )}
          <div>
            <p class="font-semibold">{post.author.name}</p>
            <p class="text-sm text-gray-500 dark:text-gray-400">Author</p>
          </div>
        </div>
        <a 
          href={`https://${HASHNODE_BLOG_URL}/${post.slug}`}
          target="_blank"
          rel="noopener noreferrer"
          class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
        >
          Read on Hashnode
        </a>
      </div>
    </footer>
  </article>
</MainGridLayout>
