/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ResumeRouteImport } from './routes/resume'
import { Route as BlogRouteImport } from './routes/blog'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BlogSlugRouteImport } from './routes/blog.$slug'
import { Route as BlogPostSlugRouteImport } from './routes/blog-post.$slug'

const ResumeRoute = ResumeRouteImport.update({
  id: '/resume',
  path: '/resume',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogRoute = BlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogSlugRoute = BlogSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => BlogRoute,
} as any)
const BlogPostSlugRoute = BlogPostSlugRouteImport.update({
  id: '/blog-post/$slug',
  path: '/blog-post/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRouteWithChildren
  '/resume': typeof ResumeRoute
  '/blog-post/$slug': typeof BlogPostSlugRoute
  '/blog/$slug': typeof BlogSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRouteWithChildren
  '/resume': typeof ResumeRoute
  '/blog-post/$slug': typeof BlogPostSlugRoute
  '/blog/$slug': typeof BlogSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRouteWithChildren
  '/resume': typeof ResumeRoute
  '/blog-post/$slug': typeof BlogPostSlugRoute
  '/blog/$slug': typeof BlogSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/blog'
    | '/resume'
    | '/blog-post/$slug'
    | '/blog/$slug'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/blog' | '/resume' | '/blog-post/$slug' | '/blog/$slug'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/blog'
    | '/resume'
    | '/blog-post/$slug'
    | '/blog/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  BlogRoute: typeof BlogRouteWithChildren
  ResumeRoute: typeof ResumeRoute
  BlogPostSlugRoute: typeof BlogPostSlugRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/resume': {
      id: '/resume'
      path: '/resume'
      fullPath: '/resume'
      preLoaderRoute: typeof ResumeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugRouteImport
      parentRoute: typeof BlogRoute
    }
    '/blog-post/$slug': {
      id: '/blog-post/$slug'
      path: '/blog-post/$slug'
      fullPath: '/blog-post/$slug'
      preLoaderRoute: typeof BlogPostSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface BlogRouteChildren {
  BlogSlugRoute: typeof BlogSlugRoute
}

const BlogRouteChildren: BlogRouteChildren = {
  BlogSlugRoute: BlogSlugRoute,
}

const BlogRouteWithChildren = BlogRoute._addFileChildren(BlogRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  BlogRoute: BlogRouteWithChildren,
  ResumeRoute: ResumeRoute,
  BlogPostSlugRoute: BlogPostSlugRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
